{"version":3,"file":"static/js/191.d198fad1.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef , useState,useEffect} from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button  from \"../FormElements/Button\";  \r\n\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if(event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    }\r\n    else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n   }\r\n\r\n\r\n  const filePickerRef = useRef();\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  }\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".png,.jpg,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        name={props.name}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        name={props.name}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      \r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        console.log(err);\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n            image:{\r\n              value: null,\r\n              isValid: false\r\n            }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    \r\n      console.log(formState);\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n          'POST',\r\n         formData,\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler}  errorText=\"Please provide an image.\"/>}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n           {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","href","_jsx","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","name","placeholder","onBlur","rows","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","console","log","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","process","JSON","stringify","login","userId","token","formData","FormData","append","image","Input","ImageUpload","switchModeHandler","prevMode"],"sourceRoot":""}