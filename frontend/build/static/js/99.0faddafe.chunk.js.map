{"version":3,"file":"static/js/99.0faddafe.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, sendRequest, error, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      lat: {\n        value: 0,\n        isValid: false,\n      },\n      lng: {\n        value: 0,\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n  const navigate = useNavigate();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"location[lat]\", formState.inputs.lat.value);\n      formData.append(\"location[lng]\", formState.inputs.lng.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      console.log(formData);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/places\", \"POST\", formData, {\n        Authorization: \"Bearer \" + auth.token\n      });\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          name=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          name=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          name=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"lat\"\n          name=\"lat\"\n          element=\"input\"\n          type=\"number\"\n          label=\"Latitude\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid latitude.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"lng\"\n          name=\"lng\"\n          element=\"input\"\n          type=\"number\"\n          label=\"Longitude\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid longitude.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          center\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef , useState,useEffect} from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button  from \"../FormElements/Button\";  \r\n\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if(event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    }\r\n    else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n   }\r\n\r\n\r\n  const filePickerRef = useRef();\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  }\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".png,.jpg,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        name={props.name}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        name={props.name}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      \r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        console.log(err);\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","sendRequest","error","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","lat","lng","image","navigate","useNavigate","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","console","log","inputs","formData","FormData","append","process","Authorization","token","err","LoadingSpinner","asOverlay","Input","id","name","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","center","Button","disabled","props","href","concat","size","inverse","danger","to","Link","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}